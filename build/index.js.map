{"version":3,"file":"index.js","sources":["../src/lib/components/card/index.tsx","../src/lib/components/list/index.tsx","../src/lib/index.tsx"],"sourcesContent":["import React, { FunctionComponent } from \"react\";\nimport { CardProps } from \"../../model\";\n\nconst Card: FunctionComponent<CardProps> = (props) => {\n\n  const itemClicked = (): void => {\n    document.getElementById(props.inputId)?.click()\n  }\n\n  return (\n    <div className=\"cursor-pointer drag_item_content\" onClick={itemClicked}>\n      \n          {props.children ? props.children :  \n            <main className={`drag_item ${props.draggerImg ? \"drag_item_drag_img\" : \"\"}`}>\n              <span className=\"\">\n                  <div>{props.data.value}</div>\n              </span>\n            </main>\n          }\n      \n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\ntype ListProps = {\n  children?: React.ReactNode;\n  title: string;\n  id: string;\n  centerTitle?: boolean;\n  onDrop: (e: React.DragEvent) => void;\n  onDragOver: (e: React.DragEvent) => void;\n};\n\nconst List = ({\n  children,\n  id,\n  title,\n  centerTitle,\n  onDrop,\n  onDragOver,\n}: ListProps) => {\n  return (\n    <div className=\"h-100 w-100\">\n      <div className=\"h-100\">\n        <div className=\"h-100\" onDrop={onDrop} onDragOver={onDragOver}>\n          <div className=\"h-100 drag_box_container\">\n            {title ? (\n              <div\n                className={`dragger_title ${centerTitle ? \"center_title\" : \"\"}`}\n              >\n                {title}\n              </div>\n            ) : (\n              \"\"\n            )}\n            <div\n              className={`drag_box ${title ? \"drag_box_on_drag_tittle\" : \"\"}`}\n            >\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","import Card from \"./components/card\";\nimport List from \"./components/list\";\nimport { FunctionComponent, useState } from \"react\";\nimport { MainContainerProps } from \"./model\";\nimport \"./react-drag-drop-style.css\";\n\nconst MainContainer: FunctionComponent<MainContainerProps> = (props) => {\n  const [items, setItems] = useState(props.data);\n  const [selectItems, setSelectItems] = useState<{\n    items: any[];\n    selectedArray: string;\n  }>({ items: [], selectedArray: \"\" });\n  const [draggedOver, setDraggedOver] = useState<{\n    listId: string;\n    index: number;\n  } | null>(null);\n\n  const removeFromList = (list: any, index: any) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(index, 1);\n    return [removed, result];\n  };\n\n  const selectFromList = (\n    event: any,\n    item: any,\n    index: number,\n    draggedArray: string\n  ) => {\n    let currentSelectedItems = { ...selectItems };\n    if (selectItems.selectedArray !== draggedArray) {\n      setSelectItems({ items: [], selectedArray: draggedArray });\n      currentSelectedItems = { items: [], selectedArray: draggedArray };\n    }\n\n    let result = [];\n    if (event.target.checked) {\n      let data = [];\n      data.push({ ...item, sourceIndex: index });\n      result = [...currentSelectedItems.items, ...data];\n    } else {\n      let data = [...currentSelectedItems.items];\n      var itemIndex = data.findIndex((el) => el.id === item.id);\n      data.splice(itemIndex, 1);\n      result = [...data];\n    }\n    result.sort((a, b) => {\n      return a.sourceIndex - b.sourceIndex;\n    });\n    setSelectItems({ items: result, selectedArray: draggedArray });\n  };\n\n  const addToList = (list: any, index: any, element: any) => {\n    const result = Array.from(list);\n    result.splice(index, 0, element);\n    return result;\n  };\n\n  const handleDragStart = (\n    e: React.DragEvent,\n    item: any,\n    listId: string,\n    index: number\n  ) => {\n    e.dataTransfer.effectAllowed = \"move\";\n    e.dataTransfer.setData(\"text/html\", e.currentTarget.innerHTML);\n    e.dataTransfer.setData(\n      \"application/json\",\n      JSON.stringify({\n        item,\n        sourceListId: listId,\n        sourceIndex: index,\n      })\n    );\n\n    // Check if this item is part of a multi-selection\n    const isMultiDrag =\n      selectItems.items.findIndex((d) => d.sourceIndex === index) !== -1 &&\n      selectItems.selectedArray === listId;\n\n    if (isMultiDrag && selectItems.items.length > 1) {\n      // Create custom drag image for multiple items\n      const dragImage = createMultiDragImage(selectItems.items.length);\n      document.body.appendChild(dragImage);\n      e.dataTransfer.setDragImage(dragImage, 40, 40);\n\n      // Clean up the drag image after a short delay\n      setTimeout(() => {\n        document.body.removeChild(dragImage);\n      }, 0);\n    }\n\n    // Add dragging class for visual feedback\n    (e.currentTarget as HTMLElement).classList.add(\"dragging\");\n\n    // If dragging multiple items, add visual feedback to all selected items\n    if (isMultiDrag && selectItems.items.length > 1) {\n      selectItems.items.forEach((selectedItem) => {\n        const element = document.getElementById(\n          `${listId}_${selectedItem.sourceIndex}`\n        );\n        if (element) {\n          element\n            .closest(\".drag_item_wrapper\")\n            ?.classList.add(\"multi-dragging\");\n        }\n      });\n    }\n  };\n\n  const createMultiDragImage = (count: number): HTMLElement => {\n    const container = document.createElement(\"div\");\n    container.style.cssText = `\n      position: absolute;\n      top: -1000px;\n      left: -1000px;\n      width: 100px;\n      height: 100px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      filter: drop-shadow(0 4px 12px rgba(0, 0, 0, 0.15));\n    `;\n\n    const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    svg.setAttribute(\"width\", \"70\");\n    svg.setAttribute(\"height\", \"70\");\n    svg.setAttribute(\"viewBox\", \"0 0 70 70\");\n    svg.style.cssText = \"pointer-events: none;\";\n\n    // Background card\n    const bgRect = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"rect\"\n    );\n    bgRect.setAttribute(\"x\", \"10\");\n    bgRect.setAttribute(\"y\", \"10\");\n    bgRect.setAttribute(\"width\", \"50\");\n    bgRect.setAttribute(\"height\", \"50\");\n    bgRect.setAttribute(\"rx\", \"8\");\n    bgRect.setAttribute(\"fill\", \"white\");\n    bgRect.setAttribute(\"stroke\", \"#e0e0e0\");\n    bgRect.setAttribute(\"stroke-width\", \"2\");\n    svg.appendChild(bgRect);\n\n    // Add stacked cards icon (simple, minimal)\n    const stackGroup = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"g\"\n    );\n\n    // Back card (subtle gray)\n    const rect1 = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"rect\"\n    );\n    rect1.setAttribute(\"x\", \"28\");\n    rect1.setAttribute(\"y\", \"20\");\n    rect1.setAttribute(\"width\", \"22\");\n    rect1.setAttribute(\"height\", \"28\");\n    rect1.setAttribute(\"rx\", \"2\");\n    rect1.setAttribute(\"fill\", \"#f5f5f5\");\n    rect1.setAttribute(\"stroke\", \"#ccc\");\n    rect1.setAttribute(\"stroke-width\", \"1\");\n\n    // Middle card\n    const rect2 = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"rect\"\n    );\n    rect2.setAttribute(\"x\", \"26\");\n    rect2.setAttribute(\"y\", \"23\");\n    rect2.setAttribute(\"width\", \"22\");\n    rect2.setAttribute(\"height\", \"28\");\n    rect2.setAttribute(\"rx\", \"2\");\n    rect2.setAttribute(\"fill\", \"#fafafa\");\n    rect2.setAttribute(\"stroke\", \"#bbb\");\n    rect2.setAttribute(\"stroke-width\", \"1\");\n\n    // Front card (white, most prominent)\n    const rect3 = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"rect\"\n    );\n    rect3.setAttribute(\"x\", \"24\");\n    rect3.setAttribute(\"y\", \"26\");\n    rect3.setAttribute(\"width\", \"22\");\n    rect3.setAttribute(\"height\", \"28\");\n    rect3.setAttribute(\"rx\", \"2\");\n    rect3.setAttribute(\"fill\", \"white\");\n    rect3.setAttribute(\"stroke\", \"#999\");\n    rect3.setAttribute(\"stroke-width\", \"1.5\");\n\n    stackGroup.appendChild(rect1);\n    stackGroup.appendChild(rect2);\n    stackGroup.appendChild(rect3);\n    svg.appendChild(stackGroup);\n\n    // Add count badge (simple gray circle)\n    const badge = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"circle\"\n    );\n    badge.setAttribute(\"cx\", \"52\");\n    badge.setAttribute(\"cy\", \"18\");\n    badge.setAttribute(\"r\", \"12\");\n    badge.setAttribute(\"fill\", \"#666\");\n    badge.setAttribute(\"stroke\", \"white\");\n    badge.setAttribute(\"stroke-width\", \"2\");\n\n    const text = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n    text.setAttribute(\"x\", \"52\");\n    text.setAttribute(\"y\", \"23\");\n    text.setAttribute(\"text-anchor\", \"middle\");\n    text.setAttribute(\"fill\", \"white\");\n    text.setAttribute(\"font-size\", \"13\");\n    text.setAttribute(\"font-weight\", \"700\");\n    text.setAttribute(\"font-family\", \"system-ui, -apple-system, sans-serif\");\n    text.textContent = count.toString();\n\n    svg.appendChild(badge);\n    svg.appendChild(text);\n    container.appendChild(svg);\n\n    return container;\n  };\n\n  const handleDragEnd = (e: React.DragEvent) => {\n    (e.currentTarget as HTMLElement).classList.remove(\"dragging\");\n\n    // Remove multi-dragging class from all items\n    document.querySelectorAll(\".multi-dragging\").forEach((el) => {\n      el.classList.remove(\"multi-dragging\");\n    });\n\n    setDraggedOver(null);\n  };\n\n  const handleDragOver = (\n    e: React.DragEvent,\n    listId: string,\n    index: number\n  ) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = \"move\";\n    setDraggedOver({ listId, index });\n  };\n\n  const handleDrop = (\n    e: React.DragEvent,\n    destinationListId: string,\n    destinationIndex: number\n  ) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const data = e.dataTransfer.getData(\"application/json\");\n    if (!data) return;\n\n    const { sourceListId, sourceIndex } = JSON.parse(data);\n\n    const listCopy: any[] = [...items];\n\n    // Check if multiple items are selected and being dragged\n    if (\n      selectItems.items.findIndex((d) => d.sourceIndex === sourceIndex) !==\n        -1 &&\n      selectItems.selectedArray === sourceListId\n    ) {\n      // Handle multiple items\n      selectItems.items.forEach((el, i) => {\n        let sourceId = listCopy.findIndex((list) => list.id === sourceListId);\n        if (sourceId !== -1) {\n          const sourceList = listCopy[sourceId].data;\n          let adjustedSourceIndex = el.sourceIndex - i;\n          const [removedElement, newSourceList] = removeFromList(\n            sourceList,\n            adjustedSourceIndex\n          );\n          listCopy[sourceId].data = newSourceList;\n\n          let destinationId = listCopy.findIndex(\n            (list) => list.id === destinationListId\n          );\n          if (destinationId !== -1) {\n            const destinationList = listCopy[destinationId].data;\n            listCopy[destinationId].data = addToList(\n              destinationList,\n              destinationIndex + i,\n              removedElement\n            );\n          }\n        }\n      });\n      setSelectItems({ items: [], selectedArray: \"\" });\n    } else {\n      // Handle single item\n      let sourceId = listCopy.findIndex((list) => list.id === sourceListId);\n      const sourceList = listCopy[sourceId].data;\n      if (sourceId !== -1) {\n        const [removedElement, newSourceList] = removeFromList(\n          sourceList,\n          sourceIndex\n        );\n\n        listCopy[sourceId].data = newSourceList;\n\n        let destId = listCopy.findIndex(\n          (list) => list.id === destinationListId\n        );\n        if (destId !== -1) {\n          const destinationList = listCopy[destId].data;\n          listCopy[destId].data = addToList(\n            destinationList,\n            destinationIndex,\n            removedElement\n          );\n        }\n      }\n    }\n\n    setItems(listCopy);\n    setDraggedOver(null);\n    props.onChange(listCopy);\n  };\n\n  const handleListDrop = (e: React.DragEvent, listId: string) => {\n    // Get the list and drop at the end\n    const list = items.find((l) => l.id === listId);\n    if (list) {\n      handleDrop(e, listId, list.data.length);\n    }\n  };\n\n  return (\n    <div style={{ width: props.width, height: props.height }}>\n      <div className=\"d-flex h-100 p-2\">\n        {items.map((el) => {\n          return (\n            <List\n              key={`drop_box_${el.id}`}\n              centerTitle={props.centerTitle}\n              title={props.title ? el.name : \"\"}\n              id={el.id}\n              onDrop={(e) => handleListDrop(e, el.id)}\n              onDragOver={(e) => {\n                e.preventDefault();\n                e.dataTransfer.dropEffect = \"move\";\n              }}\n            >\n              {el.data.map((item: any, index: number) => (\n                <div\n                  key={item.id}\n                  draggable\n                  onDragStart={(e) => handleDragStart(e, item, el.id, index)}\n                  onDragEnd={handleDragEnd}\n                  onDragOver={(e) => handleDragOver(e, el.id, index)}\n                  onDrop={(e) => handleDrop(e, el.id, index)}\n                  className={`drag_item_wrapper ${\n                    draggedOver?.listId === el.id &&\n                    draggedOver?.index === index\n                      ? \"drag-over\"\n                      : \"\"\n                  }`}\n                >\n                  <div className=\"drag_item_container\">\n                    <input\n                      disabled={!props.multiple}\n                      id={`${el.id}_${index}`}\n                      type={\"checkbox\"}\n                      checked={\n                        selectItems.selectedArray === el.id &&\n                        selectItems.items.findIndex((e) => e.id === item.id) !==\n                          -1\n                      }\n                      onChange={(event) =>\n                        selectFromList(event, item, index, el.id)\n                      }\n                    />\n                    <div\n                      className=\"drag_item_content\"\n                      onClick={() => {\n                        document.getElementById(`${el.id}_${index}`)?.click();\n                      }}\n                    >\n                      {props.renderItem ? (\n                        // Use custom render function if provided\n                        props.renderItem(item, index, el.id)\n                      ) : (\n                        // Fallback to default Card component for backward compatibility\n                        <Card\n                          draggerImg={props.draggerImg}\n                          data={item}\n                          inputId={`${el.id}_${index}`}\n                        >\n                          {props.children ? props.children : null}\n                        </Card>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </List>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default MainContainer;\n"],"names":["Card","props","jsx","_a","List","children","id","title","centerTitle","onDrop","onDragOver","jsxs","MainContainer","items","setItems","useState","selectItems","setSelectItems","draggedOver","setDraggedOver","removeFromList","list","index","result","removed","selectFromList","event","item","draggedArray","currentSelectedItems","data","itemIndex","el","a","b","addToList","element","handleDragStart","e","listId","isMultiDrag","dragImage","createMultiDragImage","selectedItem","count","container","svg","bgRect","stackGroup","rect1","rect2","rect3","badge","text","handleDragEnd","handleDragOver","handleDrop","destinationListId","destinationIndex","sourceListId","sourceIndex","listCopy","d","i","sourceId","sourceList","adjustedSourceIndex","removedElement","newSourceList","destinationId","destinationList","destId","handleListDrop","l"],"mappings":"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"}